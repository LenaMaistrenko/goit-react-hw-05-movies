{"version":3,"file":"static/js/186.a074f2b1.chunk.js","mappings":"oOAIO,SAASA,IACd,OAAsCC,EAAAA,EAAAA,UAAS,IAA/C,eAAOC,EAAP,KAAoBC,EAApB,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAQR,OANAE,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,IAAkBH,GAASI,MAAK,SAAAC,GAC9BN,EAAeM,EAChB,GACF,GAAE,CAACL,IAEGF,EAAYQ,OAAS,GAC1B,wBACGR,EAAYQ,OAAS,GACpBR,EAAYS,KAAI,SAAAC,GAAI,OAClB,2BACE,qCAAaA,EAAKC,WAClB,uBAAID,EAAKE,YAFFF,EAAKG,GADI,OAQxB,qEAEH,C","sources":["components/Reviews/Reviews.jsx"],"sourcesContent":["import { fetchMovieReviews } from '../../services/fetchMovies';\nimport { useParams } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\n\nexport function Reviews() {\n  const [reviewsById, setReviewsById] = useState([]);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    fetchMovieReviews(movieId).then(data => {\n      setReviewsById(data);\n    });\n  }, [movieId]);\n  // console.log('reviewsById.length', reviewsById.length);\n  return reviewsById.length > 0 ? (\n    <ul>\n      {reviewsById.length > 0 &&\n        reviewsById.map(item => (\n          <li key={item.id}>\n            <h3>Author: {item.author}</h3>\n            <p>{item.content}</p>\n          </li>\n        ))}\n    </ul>\n  ) : (\n    <p>Sorry,we don't have reviews for this movie</p>\n  );\n}\n"],"names":["Reviews","useState","reviewsById","setReviewsById","movieId","useParams","useEffect","fetchMovieReviews","then","data","length","map","item","author","content","id"],"sourceRoot":""}